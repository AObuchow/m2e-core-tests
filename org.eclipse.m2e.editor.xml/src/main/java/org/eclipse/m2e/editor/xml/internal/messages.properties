InsertArtifactProposal_additionals=Opens a search dialog where you can select the parent pom for this project.
InsertArtifactProposal_display_name=Insert reference to parent POM
InsertArtifactProposal_searchDialog_title=Select Parent
InsertExpressionProposal_hint1=The expression evaluates to <b>{0}</b> in the current effective pom.
InsertExpressionProposal_hint2=<br>It is based on property defined in <b>{0}</b>
MavenMarkerResolution_error=Unable to apply the quick fix. The file may have unsaved changes that invalidate the current quick fix.
MavenMarkerResolution_error_title=Error
MavenMarkerResolution_schema_label=Add Schema information to the specified pom.xml
PomHyperlinkDetector_23=</artifactId>
PomHyperlinkDetector_error_message=Can't open editor for {0}\n{1}
PomHyperlinkDetector_error_title=Open Maven POM
PomHyperlinkDetector_hyperlink_pattern=Open pom.xml for {0}:{1}:{2}
PomHyperlinkDetector_job_name=Opening POM
PomHyperlinkDetector_link_managed=Open managed location for {0}
PomHyperlinkDetector_open_module=Open module project pom.xml at {0}
PomHyperlinkDetector_open_property=Open definition of property {0}
PomQuickAssistProcessor_name=Add Maven XML Schema declaration
PomQuickAssistProcessor_remove_hint=It removes the current definition to rely on value inherited from parent
PomQuickAssistProcessor_title_groupId=Remove groupId declaration
PomQuickAssistProcessor_title_version=Remove version declaration
PomTemplateContext_candidate=Maven project at {0}
PomTemplateContext_clean=Removes all files generated by the previous build
PomTemplateContext_compile=Compile the source code of the project
PomTemplateContext_deploy=Done in an integration or release environment, copies the final package to the remote repository for sharing with other developers and projects
PomTemplateContext_expression_description=Property defined in effective pom.
PomTemplateContext_generateresources=Generate resources for inclusion in the package
PomTemplateContext_generatesources=Generate any source code for inclusion in compilation
PomTemplateContext_generatetestresources=Create resources for testing
PomTemplateContext_generatetestsources=Generate any test source code for inclusion in compilation
PomTemplateContext_install=Install the package into the local repository, for use as a dependency in other projects locally
PomTemplateContext_integrationtest=Process and deploy the package if necessary into an environment where integration tests can be run
PomTemplateContext_package=Take the compiled code and package it in its distributable format, such as a JAR
PomTemplateContext_param=<b>required:</b> {0}<br><b>type:</b> {1}<br>
PomTemplateContext_param_def=default: {0}<br>
PomTemplateContext_param_expr=expression: {0}<br>
PomTemplateContext_postclean=Executes processes needed to finalize the project cleaning
PomTemplateContext_postintegrationtest=Perform actions required after integration tests have been executed. This may including cleaning up the environment
PomTemplateContext_postsite=Executes processes needed to finalize the site generation, and to prepare for site deployment
PomTemplateContext_preclean=Executes processes needed prior to the actual project cleaning
PomTemplateContext_preintegrationtest=Perform actions required before integration tests are executed. This may involve things such as setting up the required environment
PomTemplateContext_preparepackage=Perform any operations necessary to prepare a package before the actual packaging. This often results in an unpacked, processed version of the package. (Maven 2.1 and above)
PomTemplateContext_presite=Executes processes needed prior to the actual project site generation
PomTemplateContext_processclasses=Post-process the generated files from compilation, for example to do bytecode enhancement on Java classes
PomTemplateContext_processresources=Copy and process the resources into the destination directory, ready for packaging
PomTemplateContext_processsources=Process the source code, for example to filter any values
PomTemplateContext_processtestclasses=Post-process the generated files from test compilation, for example to do bytecode enhancement on Java classes. For Maven 2.0.5 and above
PomTemplateContext_processtestresources=Copy and process the resources into the test destination directory
PomTemplateContext_processtestsources=Process the test source code, for example to filter any values
PomTemplateContext_project_version_hint=For projects developed in sync only.
PomTemplateContext_site=Generates the project's site documentation
PomTemplateContext_sitedeploy=Deploys the generated site documentation to the specified web server
PomTemplateContext_test=Run tests using a suitable unit testing framework. These tests should not require the code be packaged or deployed
PomTemplateContext_testcompile=Compile the test source code into the test destination directory
PomTemplateContext_validate=Validate the project is correct and all necessary information is available
PomTemplateContext_verify=Run any checks to verify the package is valid and meets quality criteria
PomTextHover_eval1=<html>This expression evaluates to <b>{0}</b>{1}</html>
PomTextHover_eval2=<br>The property is defined in {0}
PomTextHover_managed_location=The artifact is managed in {0}
PomTextHover_managed_location_missing=The managed artifact's location could not be determined.
PomTextHover_managed_version=The managed version is <b>{0}</b>
PomTextHover_managed_version_missing=The managed version could not be determined
